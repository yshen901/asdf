c
params
channel_user_params
channel_user_params[:active]
n
@channel_user
c
@dm_channel_user
update_active
c
@dm_channel_user
update_active
c
message.channel.dm_channel_connections.active_2
message.channel.dm_channel_connections.active_1
message.channel.dm_channel_connections
channel.active_1
channel.dm_channel
c
message
n
message_data
c
message
quit
user
quit
user_params
c
quit
c
quit
c
self.full_name
self
n
self
quit
User.all
demo_user
quit
socket
c
socket
c
JSON.parse("hi")
JSON
data
dat
quit
c
data
c
data
quit
data
quit
c
data
c
data
c
data
c
data
c
data
quit
c
data
c
data
quit
data['from']
data["from']
data
c
data
c
quit
data
debugger
c
data
quit
data
c
data
c
data
c
data
c
data
c
channel_user_params
channel_params
c
call_params
c
params.permit(:type, :from, :to, :stp, :callc)
params.permit(:type, :from, :to, :stp, :call)
params.permit(:type, :from, :to, :stp, "call")
params.permit(call: {}, :type, :from, :to, :stp)
params.permit(:call, :type, :from, :to, :stp)
params.permit(:call)
params
c
params.permit(:call, :type, :from, :to, :stp)
c
params.permit(:call, :type, :from, :to, :stp)
params
c
params
c
@channel_user
c
channel_user_params
c
channel_connection.starred
c
channel_connection
c
quit
c
quit
a
asdf
a
asdf
a
workspaces
c
workspaces
c
@user
quit
c
workspace.users.length
c
workspace.users.length
workspace.users
workspace
c
current_user
c
@user
User.find(11)
User.all
@user
c
quit
current_user
quit
connection
c
user_channel_ids
quit
@current_user.channel_connections
user.channel_connections
user_channel_ids
quit
c
user_dm_channel_ids_active
user_dm_channel_ids_all
c
user_channel_ids
c
quit
user_channel_ids
c
@current_user.dm_channel_connections_1
user_channel_ids
quit
user_channel_ids
quit
@current_user.dm_channel_connections_1
user_channel_ids
c
@dm_channel_user
n
update_active
c
n
c
dm_channel_user_params
c
@dm_channel_user
current_user.id
update_active
c
channel.users
channel
c
n
channel
c
channel
channel.users
c
channel.users
c
channel.users
channel
c
@current_user.channels
user_channel_ids
c
@current_user.channels.concat(@current_user.dm_channels_1)
@current_user.channels.merge(@current_user.dm_channels_1)
@current_user.channels
user_channels
c
@current_user.dm_channels_2
@current_user.dm_channels_1
@current_user.channels
@current_user
quit
@current_user.channels
@current_user
quit
@workspace.channels.where("user_id = 7")[0]
@workspace.channels.where("user_id = 7")
quit
@workspace.channels[0].users
@workspace.channels.users
@workspace.channels
c
workspace = Workspace.includes(:channels).includes(:users).cfind_by_address("DemoWorkspace")
workspace.users
workspace.channels
workspace = Workspace.includes(:channels).includes(:users).find_by_address("DemoWorkspace")
Workspace.includes(:channels).includes(:users).find_by_address("DemoWorkspace")
@workspace.includes(:channels)
@workspace
c
n
@dm_channel_user
n
@dm_channel_user
quit
dm_channel_user_params
@dm_channel_user
c
current_user.id
curren_user.id
current_user_id
@dm_channel_user.user_2_id
@dm_channel_user
c
@dm_channel_user.user_2_id
@dm_channel_user
c
@dm_channel_user
quit
@dm_channel_user
